/*
 * This file is generated by jOOQ.
 */
package ru.yarsu.db.generated.tables.records


import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import ru.yarsu.db.generated.enums.PostStatus
import ru.yarsu.db.generated.tables.Posts


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "catalog version:03",
        "schema version:03"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class PostsRecord() : UpdatableRecordImpl<PostsRecord>(Posts.POSTS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var title: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var preview: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var content: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var hashtag: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var eventDate: OffsetDateTime?
        set(value): Unit = set(5, value)
        get(): OffsetDateTime? = get(5) as OffsetDateTime?

    open var creationDate: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    open var lastModifiedDate: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    open var authorid: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var moderatorid: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    open var status: PostStatus?
        set(value): Unit = set(10, value)
        get(): PostStatus? = get(10) as PostStatus?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PostsRecord
     */
    constructor(id: Int? = null, title: String? = null, preview: String? = null, content: String? = null, hashtag: Int? = null, eventDate: OffsetDateTime? = null, creationDate: OffsetDateTime? = null, lastModifiedDate: OffsetDateTime? = null, authorid: Int? = null, moderatorid: Int? = null, status: PostStatus? = null): this() {
        this.id = id
        this.title = title
        this.preview = preview
        this.content = content
        this.hashtag = hashtag
        this.eventDate = eventDate
        this.creationDate = creationDate
        this.lastModifiedDate = lastModifiedDate
        this.authorid = authorid
        this.moderatorid = moderatorid
        this.status = status
        resetChangedOnNotNull()
    }
}
