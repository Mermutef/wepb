@startuml
actor Пользователь
participant "Интерфейс приложения" as UI
participant "Обработчик" as AM
participant "База данных" as DB

== Регистрация пользователя ==
Пользователь -> UI: Заполняет анкету
UI -> AM: Передаёт данные регистрации
alt Данные правильные
    AM -> DB: Сохраняет данные пользователя
    DB --> AM: Возвращает ID пользователя
    AM --> UI: Подтверждает регистрацию
    UI --> Пользователь: Перенаправляет в личный кабинет
loop  Пока ошибки не будут исправлены
  else Ошибка логин занят(логин/телефон и т.д.)
      AM --> UI: Сообщает об ошибке
      UI --> Пользователь: Показывает "Логин уже занят"
  
  end
end
== Вход в систему ==
Пользователь -> UI: Вводит логин/пароль
UI -> AM: Проверяет учётные данные
AM -> DB: Запрашивает данные пользователя
alt Данные найдены
    DB --> AM: Возвращает данные
    AM --> UI: Подтверждает вход
    UI --> Пользователь: Перенаправляет на главную
loop  Пока данные не будут верными
  else Неверные данные
      DB --> AM: Возвращает null
      AM --> UI: Сообщает "Неверный логин/пароль"
      UI --> Пользователь: Показывает ошибку
  end
end
== Писатель создаёт пост ==
Пользователь -> UI: Нажимает "Создать пост"
UI -> AM: Запрашивает разрешение (role=WRITER)
alt Роль подтверждена
    AM --> UI: Подтверждает доступ
    UI --> Пользователь: Открывает редактор
    Пользователь -> UI: Заполняет пост (заголовок, медиа и т.д.)
    UI -> DB: Сохраняет черновик
    DB --> UI: Подтверждает сохранение
    UI --> Пользователь: Показывает статус "Черновик"
else Доступ запрещён
    AM --> UI: Отказывает в доступе
    UI --> Пользователь: Показывает "Недостаточно прав"
end

== Отправка на модерацию ==
Пользователь -> UI: Нажимает "Отправить на модерацию"
UI -> AM: Проверяет роль (писатель)
alt Роль подтверждена
    AM --> UI: Разрешает действие
    UI -> DB: Обновляет статус поста (модерация)
    DB --> UI: Подтверждает обновление
    UI --> Пользователь: Уведомляет об успехе
else Ошибка (пост не найден/удален и т.д.)
    DB --> UI: Возвращает null
    UI --> Пользователь: Показывает "Ошибка отправки"
end

== Модератор проверяет пост ==
Пользователь -> UI: Открывает "Посты на модерации"
UI -> AM: Проверяет роль (модератор)
alt Роль подтверждена
    AM --> UI: Разрешает доступ
    UI -> DB: Запрашивает список постов
    DB --> UI: Возвращает список
    UI --> Пользователь: Отображает список
    Пользователь -> UI: Выбирает пост для проверки
    UI -> DB: Запрашивает полные данные поста
    alt Пост найден
        DB --> UI: Возвращает данные
        UI --> Пользователь: Отображает пост
        Пользователь -> UI: Нажимает "Опубликовать"
        UI -> DB: Обновляет статус (опубликован), добавляет ID модератора
        DB --> UI: Подтверждает
        UI --> Пользователь: Уведомляет об успехе
    else Пост не найден/ошибка
        DB --> UI: Возвращает null
        UI --> Пользователь: Показывает "Пост не найден"
    end
else Доступ запрещён
    AM --> UI: Отказывает в доступе
    UI --> Пользователь: Показывает "Недостаточно прав"
end

== Читатель оставляет комментарий ==
Пользователь -> UI: Нажимает "Добавить комментарий"
UI -> AM: Проверяет роль
alt Роль подтверждена
    AM --> UI: Разрешает действие
    alt Комментарий правильный
      UI -> DB: Сохраняет комментарий
      DB --> UI: Подтверждает сохранение
      UI --> Пользователь: Обновляет интерфейс
    else Ошибка (пустой комментарий/много символов и т.д.)
      AM --> UI: Запрещает сохранять
      UI --> Пользователь: Показывает "Комментарий не может быть пустым/большим и т.д."
    end
else Роль не подтверждена
  AM --> UI: Запрет на оставление комментария
end

== Администратор управляет ролями ==
Пользователь -> UI: Открывает "Панель администратора"
UI -> AM: Проверяет роль (админ)
alt Роль подтверждена
    AM --> UI: Разрешает доступ
    UI -> DB: Запрашивает список пользователей
    DB --> UI: Возвращает список
    UI --> Пользователь: Отображает список
    Пользователь -> UI: Выбирает пользователя, меняет роль
    UI -> DB: Обновляет роль пользователя
    alt Успешное обновление
        DB --> UI: Подтверждает обновление
        UI --> Пользователь: Уведомляет об успехе
    else Ошибка (пользователь не найден)
        DB --> UI: Возвращает null
        UI --> Пользователь: Показывает "Ошибка изменения роли"
    end
else Доступ запрещён
    AM --> UI: Отказывает в доступе
    UI --> Пользователь: Показывает "Требуются права администратора"
end
@enduml
